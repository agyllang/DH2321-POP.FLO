{"version":3,"sources":["components/SwedenMap.js","components/MapContainer.js","components/LinearScale.js","icons/icon-down.svg","icons/icon-up.svg","components/DropDown.js","components/Sankey.js","components/SankeyContainer.js","components/SankeyContainerOut.js","01.csv","components/explanation.js","components/logo3.png","components/images/moa.png","components/images/albin.png","components/images/amalia.png","components/images/hilda.png","components/images/map.png","components/about.js","components/RadioButtons.js","components/Slider.js","scb_data.csv","App.js","reportWebVitals.js","index.js"],"names":["SwedenMap","geographies","selected","selectCounty","counties","height","width","useState","hoverKey","setHoverKey","console","log","geojson","projection","geoConicEquidistant","fitSize","tooltip1","d3","attr","tooltip2","tooltip3","tooltip4","colorScaleSmaller","domain","range","colorScaleBigger","colorScaleNeutral","mapIdToColor","id1","i","id","ratio","className","features","map","d","geoPath","fill","properties","ID_1","stroke","strokeWidth","strokeOpacity","onClick","onMouseOver","event","onMouseEnter","object","text","text2","text3","text4","name","toFixed","in","out","style","mouseEnter","onMouseLeave","MapContainer","setGeographies","svgRef","createRef","useEffect","fetch","then","response","status","json","swedenData","feature","objects","SWE_adm1","ref","length","LinearScale","useRef","svg","current","linear","append","legendLinear","legendColor","labelFormat","shapeWidth","cells","orient","scale","select","call","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgIconDown","_ref","title","titleId","props","viewBox","xmlns","ForwardRef","SvgIconUp","DropDown","open","setOpen","ID","returnArray","c","push","getName","indelning","color","SankeyNode","x0","index","x1","y0","y1","x","y","Math","abs","SankeyLink","link","sankeyLinkHorizontal","max","value","SankeyDiagram","data","direction","sankey","nodeWidth","nodePadding","extent","nodes","links","giveColor","prop","forEach","county","mixBlendMode","node","SankeyContainer","nodesArray","setNodesArray","linksArray","setLinksArray","React","formatData","countyIndexArr","getIndex","nodesToBe","linksToBe","inflyttLän","j","inflytt","parseInt","points","SankeyContainerOut","utflyttLän","utflytt","Explanation","show","setShow","About","state","selectedPerson","undefined","detailsPerson","src","albin","setState","onMouseOut","amalia","hilda","moa","Component","RadioButtons","radioGender","radioSelectedGender","onChange","e","type","checked","Slider","sliderYear","sliderSelectedYear","min","step","App","emptyCounties","netto","selectedCounty","setSelectedCounty","year","setYear","gender","setGender","setCounties","updatedCounties","JSON","parse","stringify","Inflyttningslän","replace","trim","Utflyttningslän","kön","Number","reduce","partial_sum","a","result","GetData","to","logo","showval","exact","path","render","scope","g","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5ef83ec.chunk.js","sourcesContent":["\r\n// src/components/WorldMap.js\r\n\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { geoConicEquidistant, geoEqualEarth, geoPath } from \"d3-geo\";\r\nimport * as d3 from 'd3';\r\n\r\n\r\n\r\nconst SwedenMap = ({ geographies, selected, selectCounty, counties, height, width }) => {\r\n\r\n    const [hoverKey, setHoverKey] = useState(0)\r\n    console.log(\"hoverKey\", hoverKey)\r\n\r\n    var geojson = {\r\n        \"type\": \"FeatureCollection\", \"features\": geographies\r\n    };\r\n    // console.log(\"geojson\",geojson)\r\n    const projection = geoConicEquidistant().fitSize([width / 2, height / 2], geojson);\r\n\r\n    // const projection = geoConicEquidistant().fitSize([width, height], geographies);\r\n\r\n\r\n    var tooltip1 = d3.select('.tooltip-area1').attr('transform', `translate(10, 40)`)\r\n    // .style('opacity', 0);\r\n    var tooltip2 = d3.select('.tooltip-area2').attr('transform', `translate(10, 60)`);\r\n\r\n    // .style('opacity', 0);\r\n    var tooltip3 = d3.select('.tooltip-area3').attr('transform', `translate(10, 80)`);\r\n    // .style('opacity', 0);\r\n    var tooltip4 = d3.select('.tooltip-area4').attr('transform', `translate(10, 100)`);\r\n    // .style('opacity', 0);\r\n\r\n    // useEffect(() => {\r\n    //     tooltip1\r\n    //         .attr('transform', `translate(10, 50)`);\r\n    //     tooltip2\r\n    //         .attr('transform', `translate(10, 65)`);\r\n    //     tooltip3\r\n    //         .attr('transform', `translate(10, 90)`);\r\n    //     tooltip4\r\n    //         .attr('transform', `translate(10, 105)`);\r\n    // }, [])\r\n\r\n\r\n\r\n\r\n\r\n    const mouseOver = (event, object) => {\r\n        console.log(\"mouseOver\")\r\n\r\n        // tooltip1.style(\"opacity\", 1);\r\n        // tooltip2.style(\"opacity\", 1);\r\n        // tooltip3.style(\"opacity\", 1);\r\n        // tooltip4.style(\"opacity\", 1);\r\n    };\r\n\r\n    const mouseLeave = (event, d) => {\r\n        console.log(\"mouseLeave\")\r\n\r\n        tooltip1.style('opacity', 0);\r\n        tooltip2.style('opacity', 0);\r\n        tooltip3.style('opacity', 0);\r\n        tooltip4.style('opacity', 0);\r\n        // setHoverKey(0)\r\n\r\n    }\r\n\r\n\r\n    const mouseEnter = (event, object) => {\r\n        console.log(\"mouseEnter\")\r\n\r\n        const text = d3.select('.tooltip-area__text');\r\n        const text2 = d3.select('.tooltip-area__text2');\r\n        const text3 = d3.select('.tooltip-area__text3');\r\n        const text4 = d3.select('.tooltip-area__text4');\r\n        for (var i in counties) {\r\n            if (counties[i].id == object.ID_1) {\r\n                //   text.text(object.VARNAME_1,);\r\n                text.text(counties[i].name).attr(\"font-size\",20).attr(\"font-weight\",\"bolder\");\r\n                text2.text(`Migration/Immigration= ${counties[i].ratio.toFixed(2)}`);\r\n                text3.text(`Migration: ${counties[i].in}`);\r\n                text4.text(`Immigration: ${counties[i].out}`);\r\n                //text.text(counties[i].netto); \r\n            }\r\n        }\r\n        tooltip1.style(\"opacity\", 1);\r\n        tooltip2.style(\"opacity\", 1);\r\n        tooltip3.style(\"opacity\", 1);\r\n        tooltip4.style(\"opacity\", 1);\r\n        setHoverKey(object.ID_1)\r\n\r\n        // tooltip1\r\n        //     .attr('transform', `translate(10, 50)`);\r\n        // tooltip2\r\n        //     .attr('transform', `translate(10, 65)`);\r\n        // tooltip3\r\n        //     .attr('transform', `translate(10, 90)`);\r\n        // tooltip4\r\n        //     .attr('transform', `translate(10, 105)`);\r\n\r\n\r\n\r\n        // if (object.ID_1 !== hoverKey) {\r\n        //     // console.log(\"mouseEnter set new cordinates\")\r\n\r\n\r\n        //     // const [x, y] = d3.pointer(event);\r\n\r\n\r\n        //     // tooltip\r\n        //     //     .attr('transform', `translate(${x}, ${y})`);\r\n        // }\r\n        // else{\r\n        //     console.log(\"här kom vi inte fram\")\r\n        // }\r\n    };\r\n\r\n\r\n\r\n    const calculateMaxMin = () => {\r\n        var calcArr = [];\r\n        counties.forEach((c) => {\r\n            calcArr.push(c.ratio)\r\n        })\r\n        console.log([Math.min.apply(null, calcArr), Math.max.apply(null, calcArr)])\r\n        return [0.5, 1.5];\r\n        // return [Math.min.apply(null, calcArr), Math.max.apply(null, calcArr)];\r\n    }\r\n\r\n    var colorScaleSmaller = d3.scaleSequential().domain([0.6, 0.95])\r\n        .range([\"rgb(0,95,255)\", \"rgb(255,255, 255)\"]);\r\n\r\n    var colorScaleBigger = d3.scaleSequential().domain([1.05, 1.4])\r\n        .range([\"rgb(255,255, 255)\", \"rgb(255,121,0)\"]);\r\n    var colorScaleNeutral = d3.scaleSequential().domain([0.96, 1.04])\r\n        .range([\"rgb(235,242, 255)\", \"rgb(255,255,255)\", \"rgb(255,244,235)\"]);\r\n\r\n    const mapIdToColor = (id1) => {\r\n        // console.log(\"mapIdToColor id1\", id1)\r\n        for (var i in counties) {\r\n\r\n            // console.log(\"counties[i].id\",counties[i].id)\r\n            if (counties[i].id == id1) {\r\n                var pivotPoint = 1.000;\r\n                // var pivotPoint = (calculateMaxMin()[0] + calculateMaxMin()[1] / 2)\r\n\r\n\r\n                if (counties[i].ratio > 1.05) {\r\n                    // console.log(\"bigger\", counties[i].ratio)\r\n\r\n                    return colorScaleBigger(counties[i].ratio)\r\n                }\r\n                if (counties[i].ratio < 0.94) {\r\n                    // console.log(\"smaller\", counties[i].ratio)\r\n\r\n                    // console.log(\"colorScaleSmaller(counties[i].ratio)\",colorScaleSmaller(counties[i].ratio))\r\n                    return colorScaleSmaller(counties[i].ratio)\r\n                }\r\n                if (1.05 > counties[i].ratio > 0.95) {\r\n                    // console.log(\"neutral\", counties[i].ratio)\r\n\r\n                    return colorScaleNeutral(counties[i].ratio)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n    \r\n            <g className=\"counties\">\r\n                {\r\n                    geojson.features.map((d, i) => (\r\n                        // geographies.map((d, i) => (\r\n                        <path\r\n                            key={`path-${i}`}\r\n                            d={geoPath().projection(projection)(d)}\r\n                            className=\"county\"\r\n                            // fill={`rgba(38,50,56,${1 / geographies.length * i})`}\r\n                            // fill={myColor(i*100)}\r\n                            fill={mapIdToColor(geographies[i].properties.ID_1)}\r\n                            stroke={selected == geographies[i].properties.ID_1 ? \"rgba(0, 0, 0, 1)\" : \"rgba(0, 0, 0, 0.5)\"}\r\n                            // stroke={selected == geographies[i].properties.ID_1 ? \"rgba(0, 0, 0, 1)\" : \"rgba(24, 14, 12, 0.5)\"}\r\n                            strokeWidth={selected == geographies[i].properties.ID_1 ? 3 : 0.5}\r\n                            strokeOpacity={selected == geographies[i].properties.ID_1 ? 1 : 0.5}\r\n                            // strokeWidth={ 3}\r\n                            // onClick={() => handleCountryClick(i)}\r\n                            onClick={() => selectCounty(geographies[i].properties.ID_1)}\r\n                            onMouseOver={(event) => { mouseOver(event, geographies[i].properties) }}\r\n                            onMouseEnter={event => { mouseEnter(event, geographies[i].properties) }}\r\n                            onMouseLeave={() => mouseLeave()}\r\n                        >\r\n\r\n                        </path>\r\n                    ))\r\n                }\r\n\r\n            </g>\r\n            <g className=\"tooltip-area1\">\r\n                <text className=\"tooltip-area__text\"></text>\r\n            </g>\r\n            <g className=\"tooltip-area2\">\r\n                <text className=\"tooltip-area__text2\"></text>\r\n            </g>\r\n            <g className=\"tooltip-area3\">\r\n                <text className=\"tooltip-area__text3\"></text>\r\n            </g>\r\n            <g className=\"tooltip-area4\">\r\n                <text className=\"tooltip-area__text4\"></text>\r\n            </g>\r\n\r\n        </>\r\n    );\r\n}\r\nexport default SwedenMap\r\n","\r\n// src/components/WorldMap.js\r\n\r\nimport React, { createRef, useRef, useState, useEffect } from \"react\";\r\nimport { geoConicEquidistant, geoEqualEarth, geoPath } from \"d3-geo\";\r\nimport { select,  } from \"d3\";\r\nimport SwedenMap from \"./SwedenMap\"\r\n// import * as d3 from 'd3';\r\n// import data from '../scb_data.csv';\r\n//import Sankey from \"./SankeyContainer\"\r\n\r\n\r\n\r\nimport { feature } from \"topojson-client\";\r\n//import axios from 'axios';\r\n\r\n\r\nvar width = 800;\r\nvar height = 1000;\r\n\r\n//const projection = geoConicEquidistant().scale(1200).center([45, 60]);\r\n\r\nconst MapContainer = ({selected, selectCounty, counties}) => {\r\n    const [geographies, setGeographies] = useState([])\r\n    const svgRef = createRef();\r\n\r\n    // console.log(\"selected in map container\",selected)\r\n    useEffect(() => {\r\n        fetch(\"/sweden-counties.json\")\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    console.log(`There was a problem: ${response.status}`)\r\n                    return\r\n                }\r\n                response.json().then(swedenData => {\r\n                    setGeographies(feature(swedenData, swedenData.objects.SWE_adm1).features);\r\n                    //console.log(\"swedenData1\", swedenData);\r\n                    // projection.fitExtent(\r\n                    //     [\r\n                    //         [0, 0],\r\n                    //         [width / 2, height / 2],\r\n                    //     ], geographies\r\n                    // )\r\n                })\r\n            })\r\n    \r\n    }, []);\r\n\r\n    return (\r\n        <svg ref={svgRef} width={\"100%\"} height={530} >\r\n        {/* <svg ref={svgRef} > */}\r\n            {geographies.length>0  &&  \r\n            <SwedenMap geographies={geographies} selectCounty={selectCounty} selected={selected} counties={counties} width={width} height={height}/> \r\n            }\r\n           \r\n        </svg>\r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default MapContainer\r\n","\r\n// \r\n\r\nimport React, { useRef,useState, useEffect } from \"react\";\r\n//import d3Legend from \"d3-svg-legend\";\r\nimport * as d3 from 'd3';\r\nimport { legendColor } from 'd3-svg-legend';\r\n\r\nconst LinearScale = () => {\r\n    const svgRef = useRef();\r\n    useEffect(()=>{\r\n        const svg = d3.select(svgRef.current)\r\n        var linear = d3.scaleLinear()\r\n        .domain([0.60,1.00,1.40])\r\n        .range([\"rgb(0,95,255)\",\"rgb(255,255, 255)\", \"rgb(255,121,0)\"]);\r\n\r\n      svg.append(\"g\")\r\n        .attr(\"class\", \"legendLinear\")\r\n        .attr(\"transform\", \"translate(20,20)\");\r\n      \r\n      var legendLinear = legendColor()\r\n        .labelFormat(d3.format(\".2f\"))\r\n        .shapeWidth(30)\r\n        .cells(11)\r\n        .orient('vertical')\r\n        .scale(linear);\r\n      \r\n      svg.select(\".legendLinear\")\r\n        .call(legendLinear);\r\n    },[])\r\n   \r\n            \r\n          \r\n    return (\r\n        <svg ref={svgRef} height={300} width={100} >\r\n           \r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default LinearScale\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0L5.83333 8.75L11.6667 0\",\n  fill: \"black\"\n});\n\nfunction SvgIconDown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 9,\n    viewBox: \"0 0 12 9\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconDown);\nexport default __webpack_public_path__ + \"static/media/icon-down.b35a1bdf.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.6667 8.75L5.83342 -5.09966e-07L8.17776e-05 8.75\",\n  fill: \"black\"\n});\n\nfunction SvgIconUp(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 9,\n    viewBox: \"0 0 12 9\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconUp);\nexport default __webpack_public_path__ + \"static/media/icon-up.47bfe2be.svg\";\nexport { ForwardRef as ReactComponent };","\r\n// \r\n\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./components.css\";\r\nimport { ReactComponent as DownSvg } from '../icons/icon-down.svg'\r\nimport { ReactComponent as UpSvg } from '../icons/icon-up.svg'\r\n\r\n//import d3Legend from \"d3-svg-legend\";\r\n\r\n\r\nconst DropDown = ({ selected, selectCounty }) => {\r\n    // console.log(\"Dropdown_selected,:\", selected)\r\n    const [open, setOpen] = useState(false);\r\n    const [hover, setHover] = useState(false);\r\n\r\n    const counties = [\r\n        { id: 1, name: \"Stockholms län\", },\r\n        { id: 3, name: \"Uppsala län\", },\r\n        { id: 4, name: \"Södermanlands län\", },\r\n        { id: 5, name: \"Östergötlands län\", },\r\n        { id: 6, name: \"Jönköpings län\", },\r\n        { id: 7, name: \"Kronobergs län\", },\r\n        { id: 8, name: \"Kalmar län\", },\r\n        { id: 9, name: \"Gotlands län\", },\r\n        { id: 10, name: \"Blekinge län\", },\r\n        { id: 12, name: \"Skåne län\", },\r\n        { id: 13, name: \"Hallands län\", },\r\n        { id: 14, name: \"Västra Götalands län\", },\r\n        { id: 17, name: \"Värmlands län\", },\r\n        { id: 18, name: \"Örebro län\", },\r\n        { id: 19, name: \"Västmanlands län\", },\r\n        { id: 20, name: \"Dalarnas län\", },\r\n        { id: 21, name: \"Gävleborgs län\", },\r\n        { id: 22, name: \"Västernorrlands län\", },\r\n        { id: 23, name: \"Jämtlands län\", },\r\n        { id: 24, name: \"Västerbottens län\", },\r\n        { id: 25, name: \"Norrbottens län\", },\r\n    ]\r\n\r\n    const getName = (ID) => {\r\n        // counties.filter((c) => c.id == selected)\r\n        var returnArray = []\r\n        counties.map((c) => {\r\n            if (c.id == ID) {\r\n                console.log(\"c.name\", c.name)\r\n                returnArray.push(c.name)\r\n            }\r\n        })\r\n        return returnArray[0]\r\n    }\r\n\r\n    return (\r\n        <div className=\"dropDown\">\r\n        <div className=\"dropDownContainer\" >\r\n            <div className=\"dropDownSelectionContainer\">\r\n                <span className=\"dropDownSelectedSpan\">{selected != null ? getName(selected) : \"Choose a county\"}</span>\r\n                <button className=\"dropDownButton\" onClick={() => setOpen(!open)}>\r\n                    {!open ? <DownSvg />\r\n                        : <UpSvg />\r\n                    }\r\n                </button>\r\n            </div>\r\n            {open ?\r\n\r\n                <ul className=\"dropDownUL\">{counties.map(c =>\r\n                    <li className={c.id == selected ? \"dropDownItemSelected\" : \"dropDownItem\"}\r\n\r\n                        key={c.id}\r\n                        // onMouseEnter={() => setHover(true)}\r\n                        // onMouseLeave={() => { setHover(false) }}\r\n                        onClick={() => {\r\n                            selectCounty(c.id)\r\n                            setOpen(false)\r\n                        }}\r\n                    >\r\n                        {c.name}</li>\r\n                )}\r\n\r\n                </ul> : null\r\n\r\n\r\n            }\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropDown\r\n","import * as d3 from \"d3\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { sankey, sankeyLinkHorizontal } from \"d3-sankey\"; //https://www.npmjs.com/package/d3-sankey-diagram\r\nimport \"../Sankey.css\"\r\n\r\n//assigning color for each län\r\nconst indelning = {\r\n  \"Götaland\": [\r\n    {name: \"Blekinge län\", color:\"#08007A\"}, \r\n    {name: \"Västra Götalands län\", color:\"#0B00A3\"},\r\n    {name: \"Gotlands län\", color: \"#0E00CC\"},\r\n    {name: \"Hallands län\", color:\"#1100FF\"},\r\n    {name:\"Skåne län\", color:\"#2E1FFF\"},\r\n    {name: \"Jönköpings län\", color: \"#5447FF\"},\r\n    {name: \"Kalmar län\", color:\"#7A70FF\"},\r\n    {name: \"Kronobergs län\", color: \"#A099FF\"},\r\n    {name: \"Östergötlands län\", color: \"#C6C2FF\"},\r\n  ],\r\n  \"Svealand\": [\r\n    {name: \"Uppsala län\", color:\"#CC0000\"},\r\n    {name: \"Örebro län\", color: \"#FF0A0A\"},\r\n    {name: \"Västmanlands län\", color: \"#FF4747\"},\r\n    {name:\"Södermanlands län\", color: \"#FF8585\"},\r\n    {name: \"Stockholms län\", color: \"#FF8585\"},\r\n    {name:\"Värmlands län\", color:\"#FFC2C2\"}\r\n  ],\r\n  \"Norrland\": [\r\n    {name: \"Gävleborgs län\", color: \"#005200\"},\r\n    {name: \"Jämtlands län\", color: \"#007A00\"},\r\n    {name: \"Dalarnas län\", color: \"#00A300\"},\r\n    {name: \"Västernorrlands län\", color: \"#00CC00\"},\r\n    {name: \"Västerbottens län\", color: \"#00F500\"},\r\n    {name: \"Norrbottens län\", color: \"#1FFF1F\"},\r\n  ]\r\n}\r\n\r\n//creates a node for each län\r\nconst SankeyNode = ({ name, index, x0, x1, y0, y1, color }) => (\r\n//  <rect x={x0} y={index == 20? 101: y0} width={x1 - x0} height={Math.abs(y1 - y0)}>\r\n  <rect x={x0} y={y0} width={x1 - x0} height={Math.abs(y1 - y0)}>\r\n    <title>{name} </title>\r\n  </rect> //To add color add the attribute fill i nrect\r\n);\r\n\r\n//creates the links between all läns\r\nconst SankeyLink = ({ link, color }) => (\r\n\r\n  <path\r\n    // d={sankeyLinkHorizontal()(link)}\r\n    d={sankeyLinkHorizontal()(link)}\r\n    style={{\r\n      fill: \"none\",\r\n      stroke: color,\r\n      strokeWidth: Math.max(1, link.width)\r\n    }}\r\n    >\r\n      <title>{link.source.name} {\"→\"} {link.target.name} {':'} {link.value} </title>\r\n  </path>\r\n);\r\n\r\n//create and returns the diagram\r\n\r\nconst SankeyDiagram = ({ data, width, height, direction }) => {\r\n\r\n//console.log(\"data from Sankey\", data)\r\n\r\n  const { nodes, links } = sankey()\r\n    .nodeWidth(15)\r\n    .nodePadding(10)\r\n    .extent([[1, 1], [width - 1, height - 5]])\r\n    (data);\r\n  //console.log(\"links\", links);\r\n  // const color = chroma.scale(\"Set3\").classes(nodes.length);\r\n  // const colorScale = d3\r\n  //   .scaleLinear()\r\n  //   .domain([0, nodes.length])\r\n  //   .range([0, 1]);\r\n\r\n  //assigns the different links a color depenting on the county\r\n  const giveColor = (link) => {\r\n    var color\r\n    if (direction == \"in\") {\r\n      // console.log(\"--------in-------\")\r\n      for (const prop in indelning) {\r\n        indelning[prop].forEach((county) => {\r\n          if (county.name == link.source.name) {\r\n            // console.log(\"i if-satsen\", typeof county.color)\r\n            color = county.color\r\n          }\r\n        })\r\n      }\r\n    }\r\n    else if (direction == \"out\") {\r\n      // console.log(\"------out-------\")\r\n      for (const prop in indelning) {\r\n        indelning[prop].forEach((county) => {\r\n          if (county.name == link.target.name) {\r\n            // console.log(\"i if-satsen\", typeof county.color)\r\n            color = county.color\r\n          }\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      // console.log(\"----nothing-----\")\r\n      color = \"blue\"\r\n    }\r\n    return color\r\n  }\r\n\r\n  return (\r\n    <g style={{ mixBlendMode: \"multiply\" }}>\r\n      {nodes.map((node, i) => (\r\n        <SankeyNode\r\n          {...node}\r\n          {...i}\r\n          // color={(colorScale(i)).hex()}\r\n          key={direction === \"out\" ? `${node.name}-out` : `${node.name}-in`}\r\n        />\r\n      ))}\r\n      {links.map((link, i) => (\r\n        //console.log(\"in return:\", giveColor(link.source)),\r\n        <SankeyLink\r\n          link={link}\r\n          key={direction === \"out\" ? `${link.index}-out` : `${link.index}-in`}\r\n          color={giveColor(link)}\r\n        // color={(colorScale(link.source.index)).hex()}\r\n        />\r\n      ))}\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default SankeyDiagram;\r\n","//import React from \"react\";\r\nimport SankeyDiagram from \"./Sankey\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\n//import { geoConicEquidistant, geoEqualEarth, geoPath } from \"d3-geo\";\r\n//import * as d3 from 'd3';\r\n\r\nconst SankeyContainer = ({ counties, selected, }) => {\r\n    const [nodesArray, setNodesArray] = useState([])\r\n    const [linksArray, setLinksArray] = useState([])\r\n\r\n\r\n    console.log(\" SankeyContainer counties_____\",counties)\r\n    // const [width, setWidth] = useState(700)\r\n    // const [height, setHeight] = useState(700)\r\n    //const [dim, setDim] = useState({})\r\n    const [width, setWidth] = useState(400)\r\n    const [height, setHeight] = useState(400)\r\n\r\n    const svgRef = React.createRef();\r\n    // console.log(\"SankeyContainer counties in\", counties)\r\n    // console.log(\"SankeyContainer counties\", counties)\r\n    // console.log(\"structuredData\",structuredData)\r\n\r\n    // console.log(\"VVVVVVV counties in SANKEY IN\", counties)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getIndex = (ID) => {\r\n            var countyIndexArr = []\r\n            counties.map((c, i) => {\r\n                if (c.id == ID) {\r\n                    countyIndexArr.push(i)\r\n                }\r\n            })\r\n            return countyIndexArr[0]\r\n        }\r\n        // console.log(\"counties in useEffect\",counties)\r\n        formatData(counties[getIndex(selected)])\r\n    }, [counties,selected])\r\n    // const measureSVG = () => {\r\n    //     const { width, height } = svgRef.current.getBoundingClientRect();\r\n\r\n    //     setWidth(width);\r\n    //     setHeight(height);\r\n    // }\r\n    const formatData = (counties) => {\r\n\r\n        //create all the nodes and links\r\n        console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>nodesArray in SankeyContainer\",nodesArray)\r\n        var nodesToBe = []\r\n        var linksToBe = []\r\n\r\n        //adding all the counties as node target \r\n        //example: \"nodes\": [ {name: \"Uppsala län\"},{name: \"Södermanlands län\"},{name: \"Östergötlands län\"},]\r\n        for (var i in counties.inflyttLän) {\r\n            nodesToBe.push({ \"name\": counties.inflyttLän[i] })\r\n        }\r\n        // console.log(\"nodestobe\", nodesToBe)\r\n\r\n\r\n        for (var j in counties.inflytt) {\r\n            // console.log(\"j\",j);\r\n            linksToBe.push({ \"source\": parseInt(j), \"target\": counties.inflytt.length, \"value\": counties.inflytt[j] })\r\n            // linksToBe.push({ \"source\": parseInt(j), \"target\": counties.inflytt.length - 1, \"value\": counties.inflytt[j] })\r\n        }\r\n        //console.log(\"linksToBe\", linksToBe)\r\n\r\n        //adding the \"target\" counties to the last array. (THIS is used to target the links towards)\r\n        nodesToBe.push({ \"name\": counties.name })\r\n\r\n        setNodesArray(nodesToBe)\r\n        setLinksArray(linksToBe)\r\n        // setData({\r\n        //     \"nodes\":\r\n        //         nodesToBe \r\n        //     ,\r\n        //     \"links\":\r\n        //         linksToBe ,\r\n        // })\r\n    }\r\n\r\n\r\n    // formatData(counties);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"counties in useffect\",counties)\r\n    //     formatData(counties)\r\n\r\n    //     // measureSVG()\r\n    //     // window.addEventListener(\"resize\", measureSVG)\r\n    //     // return () => {\r\n    //     //     console.log()\r\n    //     //     window.removeEventListener(\"resize\", measureSVG)\r\n    //     // }\r\n\r\n    // },[])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <svg width=\"50%\" height=\"500\" ref={svgRef}>\r\n            {nodesArray.length > 0 && <SankeyDiagram direction=\"in\" data={{ \"nodes\": nodesArray, \"links\": linksArray }} width={width} height={height} />}\r\n            <polyline points=\"0,420 380,420\" fill=\"none\" stroke=\"black\"/>\r\n            <path d=\"M380 420 L360 410 L360 430 Z\" />\r\n            {nodesArray.length > 0 && <text x=\"0\" y=\"440\" fill=\"black\">Immigration to {nodesArray[20].name}</text>}\r\n        </svg>\r\n    );\r\n\r\n}\r\n\r\nexport default SankeyContainer;","//import React from \"react\";\r\nimport SankeyDiagram from \"./Sankey\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\n//import { geoConicEquidistant, geoEqualEarth, geoPath } from \"d3-geo\";\r\n//import * as d3 from 'd3';\r\n\r\n\r\nconst SankeyContainerOut = ({ counties, selected }) => {\r\n    const [nodesArray, setNodesArray] = useState([])\r\n    const [linksArray, setLinksArray] = useState([])\r\n    const [width, setWidth] = useState(400)\r\n    const [height, setHeight] = useState(400)\r\n    //const [dim, setDim] = useState({})\r\n\r\n    const svgRef = React.createRef();\r\n    \r\n    useEffect(() => {\r\n\r\n        const getIndex = (ID) => {\r\n            var countyIndexArr = []\r\n            counties.map((c, i) => {\r\n                if (c.id == ID) {\r\n                    countyIndexArr.push(i)\r\n                }\r\n            })\r\n            return countyIndexArr[0]\r\n        }\r\n        // console.log(\"counties in useEffect\",counties)\r\n        formatData(counties[getIndex(selected)])\r\n    }, [counties,selected])\r\n    // const measureSVG = () => {\r\n    //     const { width, height } = svgRef.current.getBoundingClientRect();\r\n\r\n    //     setWidth(width);\r\n    //     setHeight(height);\r\n    // }\r\n    const formatData = (counties) => {\r\n        \r\n\r\n        //create all the nodes and links\r\n        \r\n        var nodesToBe = []\r\n        var linksToBe = []\r\n        \r\n        //adding all the counties as node target \r\n        //example: \"nodes\": [ {name: \"Uppsala län\"},{name: \"Södermanlands län\"},{name: \"Östergötlands län\"},]\r\n        for (var i in counties.utflyttLän) {\r\n            nodesToBe.push({ \"name\": counties.utflyttLän[i] })\r\n        }\r\n        // console.log(\"nodestobe\", nodesToBe)\r\n\r\n\r\n        for (var j in counties.utflytt) {\r\n            // console.log(\"j\",j);\r\n            linksToBe.push({ \"source\": counties.utflytt.length, \"target\":parseInt(j), \"value\": counties.utflytt[j] })\r\n            // linksToBe.push({ \"source\": parseInt(j), \"target\": counties.inflytt.length - 1, \"value\": counties.inflytt[j] })\r\n        }\r\n        //console.log(\"linksToBe\", linksToBe)\r\n\r\n        //adding the \"target\" county to the last array. (THIS is used to target the links towards)\r\n        nodesToBe.push({ \"name\": counties.name })\r\n\r\n       \r\n        setNodesArray(nodesToBe)\r\n        setLinksArray(linksToBe)\r\n        //console.log(\"structuredData.nodes formatdata\",structuredData)\r\n\r\n    }\r\n    // formatData(counties);\r\n    \r\n    // useEffect(() => {\r\n    //     console.log(\"counties in useffect\",counties)\r\n    //     formatData(counties)\r\n\r\n    //     // measureSVG()\r\n    //     // window.addEventListener(\"resize\", measureSVG)\r\n    //     // return () => {\r\n    //     //     console.log()\r\n    //     //     window.removeEventListener(\"resize\", measureSVG)\r\n    //     // }\r\n\r\n    // },[])\r\n\r\n  \r\n\r\n\r\n    return (\r\n      \r\n        <svg width=\"50%\" height=\"500\" ref={svgRef}>\r\n            {nodesArray.length > 0 && <SankeyDiagram direction=\"out\" data={{ \"nodes\": nodesArray, \"links\": linksArray }} width={width} height={height} />}\r\n            <polyline points=\"0,420 380,420\" fill=\"none\" stroke=\"black\"/>\r\n            <path d=\"M380 420 L360 410 L360 430 Z\" />\r\n            {nodesArray.length > 0 && <text x=\"0\" y=\"440\" fill=\"black\">Emigration from {nodesArray[20].name}</text>}\r\n        </svg>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default SankeyContainerOut;","export default __webpack_public_path__ + \"static/media/01.cb65d9f0.csv\";","import React, { useState, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { csv } from 'd3-fetch';\r\nimport url from './../01.csv';\r\n\r\nfunction Explanation({show, setShow}) {\r\n\r\n        return(\r\n            <div className=\"modal\" onClick={() => setShow(false)}>\r\n                    <div className=\"modal-content\">\r\n                    <p onClick={() => setShow(false)} className=\"close\">X</p>\r\n                    <h2>Map</h2>\r\n                        The <b>map</b> displays the ratio of migration to each\r\n                        county. If the immigration to a county is bigger than \r\n                        the emigration, the county is colored <text className=\"orange\">orange</text>, if not, \r\n                        it is colored <text className=\"blue\">blue</text>.\r\n                        <p>\r\n                            <b>Hover</b> over a county to get details.\r\n                        </p>\r\n                        <p>\r\n                            <b>Click</b> on a county to get full details.\r\n                        </p>\r\n                    <h2>Sankey diagram</h2>\r\n                    The <b>Sankey</b> displays the full details of the immigration and emigration\r\n                    to and from a county.\r\n                    </div>\r\n                    \r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\nexport default Explanation;","export default __webpack_public_path__ + \"static/media/logo3.dd08bc44.png\";","export default __webpack_public_path__ + \"static/media/moa.481f3d39.png\";","export default __webpack_public_path__ + \"static/media/albin.c0779bdc.png\";","export default __webpack_public_path__ + \"static/media/amalia.b22d8f37.png\";","export default __webpack_public_path__ + \"static/media/hilda.85d0fd1b.png\";","export default __webpack_public_path__ + \"static/media/map.b1ab6641.png\";","import React, { useState, useEffect } from \"react\";\r\nimport logo from './logo3.png'\r\nimport moa from './images/moa.png'\r\nimport albin from './images/albin.png'\r\nimport amalia from './images/amalia.png'\r\nimport hilda from './images/hilda.png'\r\nimport map from './images/map.png'\r\n\r\nclass About extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedPerson: undefined,\r\n            detailsPerson: undefined,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"aboutcontainer\">\r\n                    <div className=\"aboutblock\">\r\n                    <h3>Hi and welcome to POP.FLO!</h3>\r\n                            <p>POP.FLO is a tool that gives you the possibility to\r\n                                visualize moving patterns between Swedish counties, \"län\".\r\n                            </p>\r\n                            <p>We got this idea while reading about Corona driving people to move\r\n                            from the cities to smaller municipalities. We asked ourselves: has there\r\n                            been any other interesting moving patterns in Sweden during the last couple of years?\r\n                            </p>\r\n                            <p>Sweden has 21 counties - which shouldn't be mixed up\r\n                                with the Swedish provinces, \"landskap\", of which there are 25. The counties have political\r\n                                and admininistrative powers, the provinces have not. \r\n                            </p>\r\n                            <p>The data comes from the Swedish Central Bureau of Statistics, and the visualization\r\n                                is built mainly with D3.js, Javascript, CSS and React.\r\n                            </p>\r\n                    </div>\r\n                    <div className=\"aboutpicture\"><img className=\"biglogo\" src={map}></img></div>\r\n                </div>\r\n                <div className=\"aboutcontainer\">\r\n                    <div className=\"photocontainer\">\r\n                        <div className=\"photorow\">\r\n                        <img id=\"albin\" className={this.state.detailsPerson == \"Albin\" || this.state.detailsPerson == undefined ?\"profilephoto\":\"photohide\"} src={albin} onMouseEnter={() => this.setState({selectedPerson: \"Albin\"})} onClick={() => this.setState({detailsPerson: \"Albin\"})} onMouseOut={() => this.setState({selectedPerson: undefined})}></img>\r\n                            <img id=\"amalia\" className={this.state.detailsPerson == \"Amalia\" || this.state.detailsPerson == undefined ?\"profilephoto\":\"photohide\"} src={amalia} onMouseEnter={() => this.setState({selectedPerson: \"Amalia\"})} onClick={() => this.setState({detailsPerson: \"Amalia\"})} onMouseOut={() => this.setState({selectedPerson: undefined})}></img>\r\n                        </div>\r\n                        <div className=\"photorow\">\r\n                            <img id=\"hilda\" className={this.state.detailsPerson == \"Hilda\" || this.state.detailsPerson == undefined ?\"profilephoto\":\"photohide\"} src={hilda} onMouseEnter={() => this.setState({selectedPerson: \"Hilda\"})} onClick={() => this.setState({detailsPerson: \"Hilda\"})} onMouseOut={() => this.setState({selectedPerson: undefined})}></img>\r\n                            <img id=\"moa\" className={this.state.detailsPerson == \"Moa\" || this.state.detailsPerson == undefined ?\"profilephoto\":\"photohide\"} src={moa} onMouseEnter={() => this.setState({selectedPerson: \"Moa\"})} onClick={() => this.setState({detailsPerson: \"Moa\"})} onMouseOut={() => this.setState({selectedPerson: undefined})}></img>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"aboutblock\">\r\n                    {this.state.detailsPerson == \"Amalia\"? \r\n                    <div>\r\n                        <p onClick={() => this.setState({detailsPerson: undefined, selectedPerson:undefined})} className=\"close\">X</p>\r\n                            <p>\r\n                            Hi! \r\n                            I'm Amalia and I've been mainly responsible for the UX in this project.\r\n                            I've user tested our product, as well as had the user in mind through the process\r\n                            of creating this webpage!\r\n                            <p>Email me at aberglof@kth.se!</p>\r\n                            </p>\r\n                    </div> :\r\n                            (\r\n                                this.state.detailsPerson == \"Albin\" ? \r\n                                <div>\r\n                                    <p onClick={() => this.setState({detailsPerson: undefined, selectedPerson:undefined})} className=\"close\">X</p>\r\n                                    <p>Hey! My name is Albin, I have mostly been working with Front End. In this project I have explored the D3.js library. \r\n                                 \r\n                                        <p>agyllang@kth.se </p></p>\r\n                                </div>:\r\n                                (\r\n                                this.state.detailsPerson == \"Hilda\" ? \r\n                                <div>\r\n                                    <p onClick={() => this.setState({detailsPerson: undefined, selectedPerson:undefined})} className=\"close\">X</p>\r\n                                    <p>hildar@kth.se</p>\r\n                                </div>:\r\n                                (\r\n                                    this.state.detailsPerson== \"Moa\" ? \r\n                                    <div>\r\n                                        <p onClick={() => this.setState({detailsPerson: undefined, selectedPerson:undefined})} className=\"close\">X</p>\r\n                                        <p>moaeng@kth.se</p>\r\n                                    </div>:\r\n                                \r\n                                    <div>\r\n                                        <p>We are the developers of the visualization tool POP.FLO!</p>\r\n                                        <p>We are \r\n                                            {this.state.selectedPerson== \"Albin\" ? <b> Albin Matson Gyllang</b>:' Albin Matson Gyllang'}, \r\n                                            {this.state.selectedPerson== \"Amalia\"? <b> Amalia Berglöf</b>:' Amalia Berglöf'}, \r\n                                            {this.state.selectedPerson== \"Hilda\"? <b> Hilda Robertsson</b>:' Hilda Robertsson'} and  \r\n                                            {this.state.selectedPerson== \"Moa\"? <b> Moa Engquist</b>:' Moa Engquist'}.\r\n                                            We built this tool as our final project in our course in Information Visualization (DH2320)\r\n                                            at KTH.</p>\r\n                                        <p>Our goal is to visualize movement in a simple, yet interesting way! We want to\r\n                                            keep the simpleness and readability of a map, while adding visualizations to\r\n                                            help interpret the data. It's up to you if we succeeded of course. \r\n                                        </p>\r\n                                        <p>\r\n                                        You want to get in touch with us? Click on one of us to\r\n                                        get to know them better, and get the contact details!\r\n                                        </p>\r\n                                </div>\r\n                                ))\r\n                            )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport \"../App.css\";\r\n\r\nconst RadioButtons = ({radioGender, radioSelectedGender}) => {\r\n\r\n    return (\r\n        <div id=\"genderButton\"\r\n            /* value = {radioGender} */\r\n            onChange={e => radioSelectedGender(e.target.value)}>  \r\n            <input type=\"radio\" name=\"gender\" value=\"all\" checked = {radioGender === \"all\"} /> \r\n            <label>All</label>\r\n            <br/>\r\n            <input type=\"radio\" name=\"gender\" value=\"kvinnor\" checked = {radioGender === \"kvinnor\"}/>\r\n            <label>Female</label> \r\n            <br/>\r\n            <input type=\"radio\" name=\"gender\" value=\"män\" checked = {radioGender === \"män\"}/>\r\n            <label>Male</label>\r\n            {console.log(\"radioGender\", radioGender)}     \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RadioButtons","import React, { useRef,useState, useEffect } from \"react\";\r\nimport {RangeStepInput} from 'react-range-step-input';\r\nimport \"../App.css\";\r\n\r\n/* const Slider = () => {\r\n    const [year, setYear] = useState(2019);\r\n\r\n\r\n    return (\r\n        <div id=\"range\">\r\n            <div id=\"current-year\"> \r\n         <h1>{year}</h1>\r\n            </div>\r\n            <svg id=\"svg\"></svg>\r\n            <input type=\"range\" min=\"2000\" max=\"2019\" step=\"1\" defaultValue=\"2019\" id=\"range-input\"></input>\r\n      </div>\r\n      \r\n    );\r\n}\r\n\r\nexport default Slider  */\r\n\r\nconst Slider = ({sliderYear, sliderSelectedYear}) => {\r\n    //const [year, setYear] = useState(2019);\r\n    // console.log(\"sliderYear\",sliderYear)\r\n    return ( \r\n        <div className=\"addMargin\">\r\n           <div className=\"centeredSliderValue\">{sliderYear}</div>\r\n           2000\r\n            <RangeStepInput\r\n                min={2000} max={2019}\r\n                value={sliderYear} step={1}\r\n                onChange={e => sliderSelectedYear(parseInt(e.target.value))}\r\n                />\r\n  {/*           {console.log(\"SLIDER year\", sliderYear)} */}\r\n            2019\r\n        </div>\r\n    );\r\n}; \r\n\r\nexport default Slider \r\n","export default __webpack_public_path__ + \"static/media/scb_data.1ca51717.csv\";","import React, { useState, useEffect } from \"react\"\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport * as d3 from 'd3';\r\n\r\nimport MapContainer from \"./components/MapContainer\";\r\nimport LinearScale from \"./components/LinearScale\";\r\nimport DropDown from \"./components/DropDown\"\r\nimport SankeyContainer from \"./components/SankeyContainer\"\r\nimport SankeyContainerOut from \"./components/SankeyContainerOut\"\r\nimport Explanation from \"./components/explanation\"\r\nimport About from \"./components/about\";\r\nimport RadioButtons from './components/RadioButtons';\r\nimport Slider from './components/Slider';\r\n\r\nimport logo from './components/logo3.png'\r\nimport data from './scb_data.csv';\r\n\r\nimport \"./App.css\"\r\n\r\n\r\nfunction App() {\r\n\r\n  const emptyCounties = [\r\n    { id: \"01\", name: \"Stockholms län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"03\", name: \"Uppsala län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"04\", name: \"Södermanlands län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"05\", name: \"Östergötlands län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"06\", name: \"Jönköpings län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"07\", name: \"Kronobergs län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"08\", name: \"Kalmar län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"09\", name: \"Gotlands län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"10\", name: \"Blekinge län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"12\", name: \"Skåne län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"13\", name: \"Hallands län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"14\", name: \"Västra Götalands län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"17\", name: \"Värmlands län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"18\", name: \"Örebro län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"19\", name: \"Västmanlands län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"20\", name: \"Dalarnas län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"21\", name: \"Gävleborgs län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"22\", name: \"Västernorrlands län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"23\", name: \"Jämtlands län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"24\", name: \"Västerbottens län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n    { id: \"25\", name: \"Norrbottens län\", in: 0, out: 0, netto: 0, inflytt: [], utflytt: [], inflyttLän: [], utflyttLän: [] },\r\n  ]\r\n  const [selectedCounty, setSelectedCounty] = useState(null);\r\n  // console.log(\"SELECTED COUNTY IN APP.JS: \", selectedCounty)\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [year, setYear] = useState(2019);\r\n  console.log(\"YEAR\", year)\r\n\r\n  const [gender, setGender] = useState(\"all\"); //all, kvinnor, män\r\n\r\n  const [counties, setCounties] = useState([]);\r\n\r\n  const getName = (ID) => {\r\n    // counties.filter((c) => c.id == selected)\r\n    var returnArray = []\r\n    emptyCounties.map((c) => {\r\n      if (c.id == ID) {\r\n        // console.log(\"c.name\", c.name)\r\n        returnArray.push(c.name)\r\n      }\r\n    })\r\n    return returnArray[0]\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    function GetData() {\r\n      var updatedCounties = JSON.parse(JSON.stringify(emptyCounties));\r\n      d3.csv(data).then(function (data) {\r\n\r\n        data.forEach(d => {\r\n          for (var i in updatedCounties) {\r\n            d.Inflyttningslän = d.Inflyttningslän.replace(/[0-9]/g, '');\r\n            d.Inflyttningslän = d.Inflyttningslän.replace(' (Inflyttningslän)', '');\r\n            d.Inflyttningslän = d.Inflyttningslän.trim();\r\n            d.Utflyttningslän = d.Utflyttningslän.replace(' (Utflyttningslän)', '');\r\n            d.Utflyttningslän = d.Utflyttningslän.trim();\r\n\r\n            if (gender == \"all\") {\r\n\r\n              /* if (d.Inflyttningslän == updatedCounties[i].name && d.kön == \"kvinnor\" || d.Inflyttningslän == updatedCounties[i].name && d.kön == \"män\") { */\r\n              /*  if (d.Inflyttningslän == updatedCounties[i].name) {\r\n                 updatedCounties[i].inflytt.push(Number(d[year]));\r\n                 updatedCounties[i].inflyttLän.push(d.Utflyttningslän);\r\n               }\r\n \r\n               if (d.Utflyttningslän == updatedCounties[i].name) {\r\n                 updatedCounties[i].utflytt.push(Number(d[year]));\r\n                 updatedCounties[i].utflyttLän.push(d.Inflyttningslän);\r\n               } */\r\n\r\n              if (d.Inflyttningslän == updatedCounties[i].name && d.kön == \"män\") {\r\n                updatedCounties[i].inflytt.push(Number(d[year]));\r\n                updatedCounties[i].inflyttLän.push(d.Utflyttningslän);\r\n              }\r\n\r\n              if (d.Inflyttningslän == updatedCounties[i].name && d.kön == \"kvinnor\") {\r\n                updatedCounties[i].inflytt[updatedCounties[i].inflytt.length - 1] += Number(d[year]);\r\n              }\r\n\r\n              if (d.Utflyttningslän == updatedCounties[i].name && d.kön == \"män\") {\r\n                updatedCounties[i].utflytt.push(Number(d[year]));\r\n                updatedCounties[i].utflyttLän.push(d.Inflyttningslän);\r\n              }\r\n\r\n              if (d.Utflyttningslän == updatedCounties[i].name && d.kön == \"kvinnor\") {\r\n                updatedCounties[i].utflytt[updatedCounties[i].utflytt.length - 1] += Number(d[year]);\r\n              }\r\n\r\n            }\r\n            // gender = kvinnor or män\r\n            else {\r\n              if (d.Inflyttningslän == updatedCounties[i].name && d.kön == gender) {\r\n                updatedCounties[i].inflytt.push(Number(d[year]));\r\n                updatedCounties[i].inflyttLän.push(d.Utflyttningslän);\r\n              }\r\n\r\n              if (d.Utflyttningslän == updatedCounties[i].name && d.kön == gender) {\r\n                updatedCounties[i].utflytt.push(Number(d[year]));\r\n                updatedCounties[i].utflyttLän.push(d.Inflyttningslän);\r\n              }\r\n            }\r\n          }\r\n        });\r\n        for (var j in updatedCounties) {\r\n          updatedCounties[j].in = updatedCounties[j].inflytt.reduce((partial_sum, a) => partial_sum + a, 0);\r\n          updatedCounties[j].out = updatedCounties[j].utflytt.reduce((partial_sum, a) => partial_sum + a, 0);\r\n          updatedCounties[j].netto = updatedCounties[j].in - updatedCounties[j].out;\r\n          updatedCounties[j].ratio = updatedCounties[j].in / updatedCounties[j].out;\r\n        }\r\n\r\n        return updatedCounties\r\n\r\n\r\n      }).then(result => { setCounties([...result]) });\r\n\r\n    }\r\n    GetData()\r\n\r\n  }, [year, gender])\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"navbar\">\r\n        <Link to=\"/\"><img className=\"logo\" src={logo}></img></Link>\r\n        <div className=\"navbuttons\">\r\n          <button className=\"navbutton\" onClick={() => setShow(true)}>How to use</button>\r\n          <Link to=\"/about\"><button className=\"navbutton\">About us & POP.FLO</button></Link>\r\n        </div>\r\n        {show == true ? <Explanation show={show} setShow={showval => setShow(showval)} /> : <div></div>}\r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() =>\r\n          <div className=\"App\">\r\n            <div className=\"selection-container\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\"></th>\r\n                    <th scope=\"col\">County</th>\r\n                    <th scope=\"col\">Gender</th>\r\n                    <th scope=\"col\">Year</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <th scope=\"row\"></th>\r\n                    <td><DropDown selected={selectedCounty} selectCounty={county => setSelectedCounty(county)} /></td>\r\n                    <td><RadioButtons radioGender={gender} radioSelectedGender={g => setGender(g)} /></td>\r\n                    <td><Slider sliderYear={year} sliderSelectedYear={y => setYear(y)} /></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"content-container\">\r\n              <div className=\"map-container\">\r\n              <LinearScale />{counties.length > 0 && <MapContainer selected={selectedCounty} selectCounty={county => setSelectedCounty(county)} counties={counties} />}\r\n                \r\n              </div>\r\n\r\n              {!selectedCounty && <div className=\"placeholderContainer\">\r\n                <h2>Hi and welcome to POP.FLO!</h2>\r\n                <p>Choose a county to explore its emigration and immigration in detail!</p></div>}\r\n              \r\n              <div className=\"sankeyContainer\">\r\n                {selectedCounty && counties.length > 0 && <SankeyContainer selected={selectedCounty} counties={counties} />}\r\n              </div>\r\n              <div className=\"sankeyContainerOut\">\r\n                {selectedCounty && counties.length > 0 && <SankeyContainerOut selected={selectedCounty} counties={counties} />}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        }></Route>\r\n        <Route path=\"/about\" render={() => <About />}></Route>\r\n      </Switch>\r\n    </Router>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}